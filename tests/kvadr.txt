in                                                  
in
in
pop_r rcx
pop_r rbx
pop_r rax
push 0
push_r rax
jne 1:
push 0
push_r rbx
jne 2:
push 0
push_r rcx
jne 3:
push 8
out
hlt
3:
push -8
out
hlt
2:
push -1
push_r rcx
mul
push_r rbx
div
push 1
out
out
hlt
1:
push_r rbx
push_r rbx
mul
push 4
push_r rcx
push_r rax
mul
mul
sub
pop_r rdx
push 0
push_r rdx
jne 4:
push -1
push_r rbx
mul
push 2
push_r rax
mul
div
push 1
out
out
hlt
4:
push 0
push_r rdx
jb 5:
push -1
push_r rbx
mul
push_r rdx
sqrt
sub
push 2
push_r rax
mul
div
push -1
push_r rbx
mul
push_r rdx
sqrt
add
push 2
push_r rax
mul
div
push 2
out
out
out
hlt
5:
push -8
out
hlt